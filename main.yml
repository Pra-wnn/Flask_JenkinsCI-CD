name: CI / CD Pipeline

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]


jobs:
    test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              # Equivalent to git pull
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                python-version: '3.9'
            - name: Create virtual environment
              run: |
                python -m venv venv
                source venv/bin/activate

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt

            - name: Print debugging information
              run: |
                echo "Python version $(python --version) running"
                echo "Pip version $(pip --version) running"
                echo "Flask version $(pip show flask | grep Version) running"
                echo "Working Directory $(pwd)"
                echo "Contents of Working Directory $(ls -l)"
                echo "Contents of site-packages $(ls -l venv/lib/python3.9/site-packages)"
  
            - name: Run the tests from the test.py file
              run: |
                python -m unittest discover -s ./tests -p "test.py" 
  
    deploy:
      needs: test
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Log in to Docker Hub
          run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

        - name: Build the Docker image
          run: docker build -t hyperionduck/mariadbflask:latest .

        - name: Push the Docker image to Docker Hub 
          run: docker push hyperionduck/mariadbflask:latest

#In a GitHub Actions workflow, each run command is executed in a new shell session, 
#so you need to activate the virtual environment in each step where it is required. 
#However, you can streamline this by combining related commands into a single run block.