pipeline {
    // agent {
    //     node {
            
            
    //     label 'docker-agent-python'
    //     }
    // }

     agent {
        docker {
            label 'docker-agent-python'
            image 'hyperionduck/jenkinsjdk11pythonagent'
        }
    }

    triggers {
        githubPush()
    }
    
     environment {
        DOCKERHUB_CREDENTIALS = credentials('jenkins_dockerhub')
    }

    stages {
       
                stage('Git Checkout') {
                    steps {
                        
                        git branch: 'main' , changelog: false , url: 'https://github.com/Pra-wnn/Flask_JenkinsCI-CD'
                    }
                }

        
        stage('Create Virtual Environment and Install dependencies') {
            steps {
                sh 'bash -c "python3.11 -m venv venv && source venv/bin/activate && pip install -r requirements.txt"'
            
            }
        }
        
         stage('Run Flask Application') {
            steps {
                sh 'bash -c "source venv/bin/activate && nohup python3 app.py & "'
            }
        }
        
        stage('Run Tests') {
            steps {
                script {
                    try {
                        sh 'bash -c "source venv/bin/activate && python3 -m unittest discover -s ./tests -p \'test.py\'"'
                        sh 'echo $NODE_NAME'
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        error("Tests failed: ${e.message}")
                    }
                }
            }
        }
        
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t hyperionduck/flask-app .'
            }
        }

        stage('Login to DockerHub') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }

        
    }
    
    post {
        failure {
            echo 'The pipeline failed. Tests did not pass.'
        }
        success {
            echo 'All tests passed. The code can be merged to the main branch.'
        
        }
    }
    
}